name: Deploy service
# Requires secrets:
# GITHUB_TOKEN

env:
  AWS_ACCOUNT_ID: 590184101838
  AWS_REGION: us-east-1
  AWS_ECS_CLUSTER: cluster

on:
  workflow_call:
    # Requires secrets: inherit
    inputs:
      aws-app:
        required: true
        type: string

jobs:
  build-api:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ inputs.aws-app }}-github-role
          aws-region: ${{ env.AWS_REGION }}
          mask-aws-account-id: 'no'
      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: ${{ env.AWS_ACCOUNT_ID }}
          mask-password: "true"
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Set up Docker QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Setup Docker Cache
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          file: ./Dockerfile
          context: "."
          load: true
          tags: ghcr.io/${{ github.repository }}
      - name: Create ECR Image Tag
        id: ecr-image-tag
        shell: bash
        run: |
          echo "tag=${{ steps.login-ecr.outputs.registry }}/${{ inputs.aws-app }}:${{ github.sha }}" >> $GITHUB_OUTPUT
      - name: Docker Build and Push to ECR and GHCR
        uses: docker/build-push-action@v3
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ./Dockerfile
          context: "."
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            "ghcr.io/${{ github.repository }}:latest"
            "ghcr.io/${{ github.repository }}:${{ github.sha }}"
            "${{ steps.ecr-image-tag.outputs.tag }}"
    outputs:
      ecr-image-tag: ${{ steps.ecr-image-tag.outputs.tag }}

  deploy-api:
    needs: [build-api]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ inputs.aws-app }}-github-role
          aws-region: ${{ env.AWS_REGION }}
          mask-aws-account-id: 'no'
      - run: |
          aws ecs describe-task-definition --task-definition "${{ inputs.aws-app }}" --query taskDefinition > task-definition.json
          cat task-definition.json
      - id: task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ inputs.aws-app }}
          image: ${{ needs.build-api.outputs.ecr-image-tag }}
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-definition.outputs.task-definition }}
          service: ${{ inputs.aws-app }}
          cluster: ${{ env.AWS_ECS_CLUSTER }}
          wait-for-service-stability: false
